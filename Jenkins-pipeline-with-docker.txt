# Jenkins Pipeline - google " getting started with jenkins pipeline"
Need pipeline plug-in

# docker pipeline plugin needs to be installed on jenkins to run docker in jenkin pipeline.

type of pipelines -

scripted - groovy like scripts
declarative - uses jenkinsfile
==============================================

---------------------------------
Test docker command in jenkins
---------------------------------
	# make sure docker is installed on VM and add jenkins user to docker group.
    sudo usermod -aG docker jenkins            #    adding jenkins user to docker group
    sudo usermod -aG sudo jenkins              #    adding jenkins user to sudo group

	sudo usermod -aG docker vagrant            #	adding vagrant user to docker group (optional here)
        service jenkins restart	# restart jenkins to take effect
					
					
First Job : jenkinsPipeline-dockerTest-demo1

build -> execute shell 
   docker run hello-world



----------------------------------------------
Jenkin Jobs using jenkinsfile
---------------------------------------------
Second Job
New Item -> pipeline -> jenkinsPipeline-demo2
Pipeline -> pipeline script from SCM (declarative pipeline)
	GIT : https://github.com/puneetbhatia77/git-test.git
	Script Path : Jenkinsfile.txt

-----------------------------------------------------------------------------

Third Job
New Item -> pipeline -> dockerPipeline-demo3
Pipeline -> pipeline script from SCM (declarative pipeline)
	GIT : https://github.com/puneetbhatia77/git-test.git
	Script Path : Jenkinsfile-docker.txt

pipeline {
    agent any
    stages {
        stage('One') {
                steps {
                        echo 'Hi, this is Puneet from DevOps'
			
                }
        }
	    stage('Two'){
		    
		steps {
			input('Do you want to proceed?')
        }
	    }
        stage('Three') {
                when {
                        not {
                                branch "master"
                        }
                }
                steps {
			echo "Hello"
                        }
        }
        stage('Four') {
                parallel {
                        stage('Unit Test') {
                                steps{
                                        echo "Running the unit test..."
                                }
                        }
                        stage('Integration test') {
                        agent {
                                docker {                          # make sure docker is installed on VM and docker pipeline plugin installed on Jenkins and add jenkins user to docker group.
                                        reuseNode false				# sudo usermod -aG docker jenkins,    adding jenkins user to docker group
										image 'ubuntu'			        # sudo usermod -aG docker vagrant  and then restart jenkins to take effect
                                        } #reuseNode , a boolean, false by default. If true, run the container on the node specified at the top-level of the Pipeline,
			}						#      in the same workspace, rather than on a new node entirely.
				steps {
					echo 'Running the integration test..'
				}
                               
			}  }
        }
    }
}




-------------------------------------------------------------------------------
Forth Job
New Item -> pipeline -> Scripted Pipeline Demo  -> jenkinsPipelineScript-demo4
Pipeline -> pipeline script

node {
      
	for (i=0; i<2; i++) { 
           
		stage "Stage #"+i
           
		print 'Hello, world !'
          
		if (i==0)
           
		{
               
			echo 'Running on Stage #0'
          
		 }
           
		else {
               
			build 'jenkinsPipeline-demo2'
              
			 echo 'Running on Stage #1'
           
		}
      
	}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Fifth Job

New Item -> pipeline -> dockerPipeline-demo5
Pipeline -> pipeline script from SCM (declarative pipeline)
	GIT : https://github.com/puneetbhatia77/git-test.git
	Script Path : maven-jdk-hello

pipeline {
    agent none 
    stages {
        stage('Example Build') {
            agent { docker 'maven:3-alpine' } 
            steps {
                echo 'Hello, Maven'
                sh 'mvn --version'
            }
        }
        stage('Example Test') {
            agent { docker 'openjdk:8-jre' }     # can also be tested at terminal by tunning the command " sudo docker run -it openjdk:8-jre bash" and " java -version"
            steps {
                echo 'Hello, JDK'
                sh 'java -version'
            }
        }
    }
}
=================================================================
#docker deploy project    - https://github.com/puneetbhatia77/devops_pipeline_demo  
# make sure to run below command
sudo usermod -aG sudo jenkins              #    adding jenkins user to sudo group

# Jenkins new item -> docker-deploy-project -> https://github.com/puneetbhatia77/devops_pipeline_demo   ->   jenkinsfile.txt
# access 192.168.56.101:8180/sample.txt







